<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
	
<h:head>
	<h:outputStylesheet library="css" name="list-items-style.css" />
	<h:outputStylesheet library="css" name="add-item-style.css" />
</h:head>

<h:body>

	<ui:decorate template="/templates/default-template.xhtml">
	
	<ui:define name="page-title">ShoppingForYou | Add Product</ui:define>
	
	<ui:define name="page-content">

	<div id="wrapper">
		<div id="header">
			<h2>Shopping for You - Products Management</h2>
		</div>
	</div>
	
	<div id="container">
		<h3>Add Product</h3>

		<h:messages globalOnly="true" />

		<h:form id="form" style="margin-top: 10px;" >
			<h:panelGrid columns="3">
			
				<h:outputLabel>Catalog Number:</h:outputLabel> <h:inputText value="#{product.catalogNumber}" id="catalogNumber" maxlength="4" 
					converterMessage="Catalog number must contain only digits." validatorMessage="Catalog number is mandatory and must contain 2-4 digits only."> 
					<f:validateLength minimum="2" maximum="4" for="catalogNumber" />> 
				</h:inputText> <h:message style = "color:red;" for="catalogNumber" />
			
				<h:outputLabel>Description:</h:outputLabel> <h:inputText value="#{product.description}" id="description" required="true" 
					requiredMessage="Description is mandatory." validatorMessage="Description must contain only letters.">
						<f:validateRegex pattern="^[a-zA-Z ]*$" for="description" /> 
				</h:inputText> <h:message style = "color:red;" for="description" />
	
				<h:outputLabel>Category:</h:outputLabel> <h:inputText value="#{product.category}" id="category" required="true" 
					requiredMessage="Category is mandatory." validatorMessage="Category must only be one of the following: shirts/dresses/skirts/jackets.">
						<f:validateRegex pattern="^(shirts|dresses|skirts|jackets)$" for="category" /> 
				</h:inputText> <h:message style = "color:red;" for="category" />
				
				<h:outputLabel>Price:</h:outputLabel> <h:inputText value="#{product.price}" id="price"
					converterMessage="Price must contain only digits." validatorMessage="Price must contain only values >= 1."> 
					<f:validateLongRange minimum="1" for="price"/> 
				</h:inputText> <h:message style = "color:red;" for="price" />
				
				<h:outputLabel>Discount:</h:outputLabel> <h:inputText value="#{product.discount}" id="discount" 
					converterMessage="Discount must contain only digits." validatorMessage="Discount must contain only values >= 0."> 
					<f:validateLongRange minimum="0" for="discount"/> 
				</h:inputText> <h:message style = "color:red;" for="discount" />
				
				<h:outputLabel>Image:</h:outputLabel> <h:inputText value="#{product.image}" id="image" required="true" 
					requiredMessage="Image is mandatory." validatorMessage="Image (src) must be a valid URL.">
						<f:validateRegex pattern="^http(s)?:\/\/[\w.-\/]+$" for="image" /> 
				</h:inputText> <h:message style = "color:red;" for="image" />
	
				<h:outputLabel>Size:</h:outputLabel> <h:inputText value="#{product.size}" id="size" required="true" 
					requiredMessage="Size is mandatory." validatorMessage="Size must only be: 'OneSize'">
						<f:validateRegex pattern="OneSize" for="Size" /> 
            	</h:inputText> <h:message style = "color:red;" for="size" />
            							
				<h:outputLabel>Amount in Stock:</h:outputLabel> <h:inputText value="#{product.amount}" id="amount"
					converterMessage="Amount in stock must contain only digits." validatorMessage="Amount in stock must contain only values >= 0."> 
					<f:validateLongRange minimum="0" for="amount"/> 
				</h:inputText> <h:message style = "color:red;" for="amount" />
				
				<h:outputLabel /> <h:commandButton value="Save" styleClass="save" action="#{editProductController.addProduct(product)}"/>
			
			</h:panelGrid>
		</h:form>

		<div style="clear: both;"></div>

		<p><h:outputLink value="edit-products.xhtml">Back to List</h:outputLink></p>

	</div>
	</ui:define>
	</ui:decorate>
</h:body>
</html>